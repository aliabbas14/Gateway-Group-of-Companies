<!--
    This is Index View that contains the registration form.
-->

@using SourceControlAssignment1.Models;
@model RegistrationFormModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Registration Form</title>
    <link href="~/Content/bootstrap.css" type="text/css" rel="stylesheet"/>
    <script src="~/scripts/jquery-3.0.0.js" type="text/javascript"></script>
    <script src="~/scripts/bootstrap.js" type="text/javascript"></script>

   
</head>
<body>
    <div class="container-fluid"> 
        <h1 align="center">Registration Form</h1>
        <hr />

        <div class="container-fluid" style="width:75%">
            <h2 align="center">@ViewBag.success_msg</h2>
            
                @using (Html.BeginForm("Index", "Home"))
            {
                    

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.first_name)
                        @Html.TextBoxFor(x => x.first_name, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.first_name, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.last_name)
                        @Html.TextBoxFor(x => x.last_name, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.last_name, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.email)
                        @Html.TextBoxFor(x => x.email, htmlAttributes: new { @type = "email", @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.email, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.phone)
                        @Html.TextBoxFor(x => x.phone, htmlAttributes: new { @type = "number", @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.phone, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.gender)
                        
                            <label class="radio-inline">@Html.RadioButtonFor(x => x.gender, 1, new { @checked = "checked" })<span>Male</span></label>
                        
                        
                            <label class="radio-inline"> @Html.RadioButtonFor(x => x.gender, 0)<span>Female</span> </label>
                        
                        @Html.ValidationMessageFor(x => x.gender)
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.password)
                        @Html.PasswordFor(x => x.password, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.password, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.confirm_password)
                        @Html.PasswordFor(x => x.confirm_password, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.confirm_password, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.city)
                        @Html.TextBoxFor(x => x.city, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.city, "", new { @style = "color:red" })
                    </div>

                    <div class="form-group">
                        @Html.DisplayNameFor(x => x.state)
                        @Html.TextBoxFor(x => x.state, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.state, "", new { @style = "color:red" })
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary" style="width:18%">Submit</button>
                    </div>




                }
          



        </div>
</div>
</body>
</html>
